version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:5000}
    depends_on:
      - backend
    restart: unless-stopped

  # Backend Node.js API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SUNHOTELS_API_KEY=${SUNHOTELS_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - database
      - redis
    restart: unless-stopped

  # PostgreSQL Database with TimescaleDB
  database:
    image: timescale/timescaledb:latest-pg14
    environment:
      - POSTGRES_DB=hotelbooking
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secretpassword
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:alpine
    restart: unless-stopped

volumes:
  postgres_
